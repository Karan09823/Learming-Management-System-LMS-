@{
    Layout = null;
    var learnerObj = ViewBag.Learner;
    var identitylist = ViewBag.AllowedList as List<LMS.Models.Identity>;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LMS: Learner Panel</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />


    <style>
        .module-list {
            max-height: 400px; /* Adjust as needed */
            overflow-y: auto;
            margin-bottom: 20px; /* Space between modules and iframe */
        }

        .embed-responsive {
            height: 400px; /* Adjust as needed */
        }

        /*.modal-body {
            display: flex;
        }*/

        .modal-body .col-md-6 {
            padding: 15px; /* Adjust padding if needed */
        }

        /*----------------dropdown css logic-------------------------*/
        .dropdown-menu .dropdown-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .dropdown-menu .dropdown-item .btn {
                margin-left: 5px;
            }

        .module-list {
            padding-left: 20px;
        }

        .module-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 5px 0;
        }



        .company-logo {
            display: inline-block;
        }

            .company-logo img {
                width: 100px;
                height: auto;
                display: block;
            }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: #00000013;
        }

        nav {
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            height: 100%;
            background: #37B7C3;
            padding: 20px 10px;
            transition: width 300ms;
        }

            nav.close {
                width: 73px;
            }

            nav .logo_name {
                display: flex;
                align-items: center;
                margin-bottom: 20px;
            }

                nav .logo_name i {
                    font-size: 28px;
                    color: #fff;
                }

                nav .logo_name .logo_name {
                    font-size: 22px;
                    color: #fff;
                    margin-left: 10px;
                    font-weight: 600;
                }

            nav ul {
                list-style: none;
                padding-left: 0;
            }

                nav ul li {
                    position: relative;
                    width: 100%;
                    margin-bottom: 20px;
                }

                    nav ul li a {
                        display: flex;
                        align-items: center;
                        color: #fff;
                        font-size: 16px;
                        font-weight: 500;
                        text-decoration: none;
                        padding: 10px;
                        border-radius: 5px;
                        transition: background 300ms;
                    }

                        nav ul li a i {
                            font-size: 20px;
                        }

                        nav ul li a .link-name {
                            margin-left: 10px;
                        }

                        nav ul li a:hover {
                            background: #fff;
                            color: #1d1b31;
                        }

        .dashboard {
            position: relative;
            left: 250px;
            width: calc(100% - 250px);
            padding: 10px;
            transition: left 300ms, width 300ms;
        }

            .dashboard .top {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding-bottom: 20px;
            }

        .profile {
            display: flex;
            align-items: center;
        }

        .dashboard {
            padding: 5px;
        }

        .logout {
            position: absolute;
            bottom: 20px;
            width: 100%;
            text-align: center;
        }

            .logout button {
                background: #C63C51;
                color: #fff;
                border: none;
                padding: 10px;
                border-radius: 5px;
                font-size: 16px;
                cursor: pointer;
                transition: background 300ms;
            }

                .logout button:hover {
                    background: #e60000;
                }

        .top {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background-color: #00000013;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .profile img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .profile .link-name {
            font-size: 24px;
            font-weight: 600;
        }

        .dashboard .dash-content .boxes {
            display: flex;
            justify-content: space-evenly;
            flex-wrap: wrap;
            gap: 20px;
        }

        .dashboard .dash-content .box {
            flex: 1;
            min-width: calc(25% - 15px);
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

            .dashboard .dash-content .box i {
                font-size: 40px;
                color: #1d1b31;
                margin-bottom: 10px;
            }

            .dashboard .dash-content .box .text {
                font-size: 18px;
                font-weight: 500;
                margin-bottom: 5px;
            }

            .dashboard .dash-content .box .number {
                font-size: 24px;
                font-weight: 600;
            }

        .dashboard .activity {
            margin-top: 20px;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

            .dashboard .activity .title {
                font-size: 18px;
                font-weight: 600;
                margin-bottom: 10px;
            }

            .dashboard .activity .activity-data {
                display: flex;
                flex-wrap: wrap;
                gap: 20px;
            }

                .dashboard .activity .activity-data .data {
                    flex: 1;
                    min-width: 200px;
                }

                    .dashboard .activity .activity-data .data .data-title {
                        font-size: 16px;
                        font-weight: 500;
                        margin-bottom: 10px;
                    }

                    .dashboard .activity .activity-data .data .data-list {
                        font-size: 14px;
                        margin-bottom: 5px;
                    }
    </style>
</head>
<body>


    <nav>
        <div class="logo_name">
            
            <span class="logo_name">Dashboard</span>
        </div>
        <ul>




            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerView">
                    <i class="fa-solid fa-eye"></i>
                    <span class="link-name"> View Profile</span>
                </a>
            </li>

            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerEdit">
                    <i class="fa-solid fa-user-pen"></i>
                    <span class="link-name"> Edit Profile</span>
                </a>
            </li>



        </ul>
        <div class="logout">
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#LearnerLogout">
                Logout
            </button>

        </div>
    </nav>

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>

            <div class="profile">
                <span class="link-name mx-4">@learnerObj.LearnerName </span>

                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>

        <!-- Dropdown for identities -->
        <div class="container mt-5">
            <div class="dropdown">
                <button class="btn btn dropdown-toggle" type="button" id="identityDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="background-color: #37B7C3; color: white;">
                    Select Course To View It
                </button>
                <ul class="dropdown-menu" aria-labelledby="identityDropdown">
                    @if (identitylist != null && identitylist.Any())
                    {
                        foreach (var identity in identitylist)
                        {
                            <li>
                                <a class="dropdown-item" href="#" onclick="showModules('@identity.CourseCode','@identity.CourseName')">
                                    @identity.CourseCode - @identity.CourseName
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        <li>
                            <p>No Course Available </p>
                        </li>
                    }
                </ul>
            </div>
        </div>


        <div class="card mt-5">
            <div class="card-header" style="background-color: #37B7C3; color: white;">Modules List</div>
            <div class="card-body">
                <table class="table" id="moduleTable">
                    <thead>
                        <tr>
                            <th scope="col">Module_Id</th>
                            <th scope="col">Module_Name</th>
                            <th scope="col">Module_Video</th>

                        </tr>
                    </thead>
                    <tbody id="moduleTableBody">
                        <!-- Dynamic content will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </section>









    <!-- Learner View Modal -->
    <div class="modal fade" id="LearnerView" tabindex="-1" aria-labelledby="LearnerViewLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="LearnerViewLabel">Learner Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="LearnerName" class="form-label">Name:</label>
                        <p id="LearnerName" class="form-text">@learnerObj.LearnerName</p>
                    </div>
                    <br />
                    <div class="mb-3">
                        <label for="LearnerEmail" class="form-label">Email:</label>
                        <p id="LearnerEmail" class="form-text">@learnerObj.LearnerEmail</p>
                    </div>
                    <br />
                    <div class="mb-3">
                        <label for="LearnerPassword" class="form-label">Password:</label>
                        <p id="LearnerPassword" class="form-text">@learnerObj.LearnerPassword</p>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Learner Edit Modal -->
    <div class="modal fade" id="LearnerEdit" tabindex="-1" aria-labelledby="LearnerEditLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="LearnerEditLabel">Edit Your Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="LearnerEditForm" method="post" action="@Url.Action("UpdateLearner","Learner")">
                        <div class="mb-3">
                            <label for="LearnerNameEdit" class="form-label">Name:</label>
                            <input type="text" id="LearnerNameEdit" class="form-control" name="LearnerEditName" value="@learnerObj.LearnerName" autocomplete="off" />
                        </div>
                        <div class="mb-3">
                            <label for="LearnerEmailEdit" class="form-label">Email:</label>
                            <input type="email" id="LearnerEmailEdit" class="form-control" name="LearnerEditEmail" value="@learnerObj.LearnerEmail" autocomplete="off" />
                        </div>
                        <div class="mb-3">
                            <label for="LearnerPasswordEdit" class="form-label">Password:</label>
                            <input type="text" id="LearnerPasswordEdit" class="form-control" name="LearnerEditPassword" value="@learnerObj.LearnerPassword" autocomplete="off" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">

                    <button type="submit" form="LearnerEditForm" class="btn btn-warning" id="LearnerUpdateBtn">Update</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Learner Logout Modal -->
    <div class="modal fade" id="LearnerLogout" tabindex="-1" aria-labelledby="LearnerLogoutLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h6>Sure To Logout?</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-danger" id="logoutButton">Logout</button>
                </div>
            </div>
        </div>
    </div>


    <!-- learner Edit Message Modal -->
    <div class="modal fade" id="LearnerEditMsgModal" tabindex="-1" aria-labelledby="LearnerEditMsgModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="LearnerEditMsgModalLabel">Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="msgclosebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="LearnerEditMsg"></p>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>

    @*Bootstrap JS*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>


    <script>
        $(document).ready(function () {

              // Handle learner Logout
              $("#logoutButton").click(function (e) {
                  e.preventDefault();
                  $.ajax({
                      url: '@Url.Action("LearnerLogout", "Learner")',
                      type: 'POST',
                      success: function (response) {
                          if (response.success) {
                              // Redirect to login page
                              window.location.href = '@Url.Action("Welcome", "Home")'; // Adjust to your login route
                          } else {
                              alert(response.message);
                          }
                      },
                      error: function (xhr, status, error) {
                          alert("An error occurred: " + error);
                      }
                  });
              });


            // Event handler for when a course is clicked to view details
            $(document).on('click', '[data-bs-target="#courseModal"]', function () {
                const courseId = $(this).data('course-id');
                const course = courses.find(c => c.id === courseId);
                if (course) {
                    $('#courseModalLabel').text(course.name);
                    $('#courseVideo').attr('src', course.videoUrl);
                    const $courseModules = $('#courseModules');
                    $courseModules.empty();
                    course.modules.forEach(module => {
                        const moduleHtml = `
                    <button class="list-group-item list-group-item-action" data-video-url="${module.videoUrl}">${module.title}</button>
                `;
                        $courseModules.append(moduleHtml);
                    });
                }
            });

            // Event handler to update the video when a module is clicked
            $(document).on('click', '#courseModules .list-group-item-action', function () {
                const videoUrl = $(this).data('video-url');
                $('#courseVideo').attr('src', videoUrl);
            });

            // Load courses on page load
            loadCourses();






            //edit modal refresh
            $("#closebtn").click(function () {
                $("#LearnerEditForm")[0].reset();
                window.location.reload();
            })








            // Handle learner Edit Form submission
            $("#LearnerUpdateBtn").click(function (e) {
                e.preventDefault();

                if ($("#LearnerEditForm").valid()) {
                    var formData = new FormData($("#LearnerEditForm")[0]);

                    $.ajax({
                        url: $("#LearnerEditForm").attr("action"),
                        type: $("#LearnerEditForm").attr("method"),
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            showEditMessage(response.message);
                        },
                        error: function (response) {
                            var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                            showEditMessage(errorMessage);
                        }
                    });
                }
            });



           /*edit modal validation*/
            $("#LearnerEdit").validate({
                errorClass: "error",
                rules: {

                    LearnerEditName: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    LearnerEditEmail: {
                        required: true,
                        email: true
                    },
                    LearnerEditPassword: {
                        required: true,
                        minlength: 6
                    }
                },

                messages: {
                    LearnerEditName: {
                        required: "Name field cannot be empty",
                        minlength: "Name must  of 3 characters",
                        maxlength: "Name must not exceed 20 characters"
                    },
                    LearnerEditEmail: {
                        required: "Email field cannot be empty",
                        email: "Please enter valid email"
                    },
                    LearnerEditPassword: {
                        required: "Password field cannot be empty",
                        minlength:"length of must of 6 characters or more"
                    }
                }

            });

            // Display message after learner Edit form submission
            function showEditMessage(message) {

                $("#LearnerEditMsgModal #LearnerEditMsg").text(message);
                $("#LearnerEdit").modal("hide");
                $("#LearnerEditMsgModal").modal("show");


            }



        });

            /*=====================================================================================*/
            document.querySelector(".uil-bars").addEventListener("click", () => {
                document.querySelector("nav").classList.toggle("close");
                document.querySelector(".dashboard").classList.toggle("close");
            });

            /*=====================================================================================*/



            const body = document.querySelector("body");
            const sidebar = document.querySelector("nav");
            const sidebarToggle = document.querySelector(".top .uil-bars");

            sidebarToggle.addEventListener("click", () => {
                sidebar.classList.toggle("close");
                body.classList.toggle("sidebar-close");
            });

            // Example function to dynamically load data
            function loadDashboardData() {
                // Placeholder code for loading data dynamically (e.g., via AJAX)
                console.log("Loading dashboard data...");
            }

            // Call the function to load data
            loadDashboardData();

            function showModules(courseCode, courseName) {
                var tableBody = document.getElementById('moduleTableBody');
                tableBody.innerHTML = '';

                $.ajax({
                    url: '@Url.Action("InsCourseModuleList", "Learner")',
                    type: 'GET',
                    data: { courseCode: courseCode, courseName: courseName },
                    success: function (data) {
                        if (!data || !data.modules) {
                            console.error('No modules found');
                            return;
                        }

                        var modules = data.modules;

                        modules.forEach(function (module) {
                            var row = document.createElement('tr');

                            var moduleIdCell = document.createElement('td');
                            moduleIdCell.textContent = module.ModuleId;
                            row.appendChild(moduleIdCell);

                            var moduleNameCell = document.createElement('td');
                            moduleNameCell.textContent = module.ModuleName;
                            row.appendChild(moduleNameCell);

                            var moduleVideoCell = document.createElement('td');
                            var videoLink = document.createElement('a');
                            videoLink.href = module.ModuleLink;
                            videoLink.textContent = 'Watch Video';
                            videoLink.target = '_blank';
                            moduleVideoCell.appendChild(videoLink);
                            row.appendChild(moduleVideoCell);

                            tableBody.appendChild(row);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching modules:', error);
                    }
                });
            }


    </script>


</body>
</html>
